# 可重复使用的属性值
property.logfile = test
property.loghome = logs

# 控制台输出
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d %p %C{1.} [%t] %m%n

# 文件输出(滚动归档)
appender.all.type = RollingFile
appender.all.name = file
appender.all.fileName = ${loghome}/${logfile}.log
#日期滚动
appender.all.filePattern = ${loghome}/all/${logfile}-%d{yyyyMMdd-HHmmss}.log
#文件大小滚动
#appender.all.filePattern = ${loghome}/all/${logfile}-%i.log
#日期文件大小同时滚动
#appender.all.filePattern = ${loghome}/all/${logfile}-%d{yyyyMMdd-HHmmss}-%i.log
appender.all.layout.type = PatternLayout
appender.all.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.all.policies.type = Policies
# 按时间
appender.all.policies.time.type = TimeBasedTriggeringPolicy
appender.all.policies.time.interval = 2
appender.all.policies.time.modulate = true
## 按文件大小
#appender.all.policies.size.type = SizeBasedTriggeringPolicy
#appender.all.policies.size.size=100MB
# 覆盖策略
appender.all.strategy.type = DefaultRolloverStrategy
appender.all.strategy.max = 5

# 分级文件输出(error)
appender.error.type = RollingFile
appender.error.name = file_error
appender.error.fileName = ${loghome}/error.log
appender.error.filePattern = ${loghome}/error/${logfile}-error-%d{yyyyMMdd-HHmmss}.log
appender.error.layout.type = PatternLayout
appender.error.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.error.policies.type = Policies
appender.error.policies.time.type = TimeBasedTriggeringPolicy
appender.error.policies.time.interval = 2
appender.error.policies.time.modulate = true
appender.error.strategy.type = DefaultRolloverStrategy
appender.error.strategy.max = 5
# 过滤，可用于实现按日志级别分类输出
appender.error.filter.threshold.type = ThresholdFilter
appender.error.filter.threshold.level = error

# 分级文件输出(warn)
appender.warn.type = RollingFile
appender.warn.name = file_warn
appender.warn.fileName = ${loghome}/warn.log
appender.warn.filePattern = ${loghome}/warn/${logfile}-warn-%d{yyyyMMdd-HHmmss}.log
appender.warn.layout.type = PatternLayout
appender.warn.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.warn.policies.type = Policies
appender.warn.policies.time.type = TimeBasedTriggeringPolicy
appender.warn.policies.time.interval = 2
appender.warn.policies.time.modulate = true
appender.warn.strategy.type = DefaultRolloverStrategy
appender.warn.strategy.max = 5
# 过滤，可用于实现按日志级别分类输出
appender.warn.filter.threshold.type = ThresholdFilter
appender.warn.filter.threshold.level = warn

# 分级文件输出(info)
appender.info.type = RollingFile
appender.info.name = file_info
appender.info.fileName = ${loghome}/info.log
appender.info.filePattern = ${loghome}/info/${logfile}-info-%d{yyyyMMdd-HHmmss}.log
appender.info.layout.type = PatternLayout
appender.info.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.info.policies.type = Policies
appender.info.policies.time.type = TimeBasedTriggeringPolicy
appender.info.policies.time.interval = 2
appender.info.policies.time.modulate = true
appender.info.strategy.type = DefaultRolloverStrategy
appender.info.strategy.max = 5
# 过滤，可用于实现按日志级别分类输出
appender.info.filter.threshold.type = ThresholdFilter
appender.info.filter.threshold.level = info

# 分级文件输出(debug)
appender.debug.type = RollingFile
appender.debug.name = file_debug
appender.debug.fileName = ${loghome}/debug.log
appender.debug.filePattern = ${loghome}/debug/${logfile}-debug-%d{yyyyMMdd-HHmmss}.log
appender.debug.layout.type = PatternLayout
appender.debug.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.debug.policies.type = Policies
appender.debug.policies.time.type = TimeBasedTriggeringPolicy
appender.debug.policies.time.interval = 2
appender.debug.policies.time.modulate = true
appender.debug.strategy.type = DefaultRolloverStrategy
appender.debug.strategy.max = 5
# 过滤，可用于实现按日志级别分类输出
appender.debug.filter.threshold.type = ThresholdFilter
appender.debug.filter.threshold.level = debug

# 日志设置
logger.app.name = org.bk
logger.app.level = debug
logger.app.additivity = false
# 输出到两个appender
logger.app.appenderRef.file.ref = file
logger.app.appenderRef.error.ref = file_error
logger.app.appenderRef.warn.ref = file_warn
logger.app.appenderRef.info.ref = file_info
logger.app.appenderRef.debug.ref = file_debug
logger.app.appenderRef.stdout.ref = STDOUT

rootLogger.level = info
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.file.ref = file